version: '3.8'

services:
  # PostgreSQL with PostGIS extension
  postgres:
    image: postgis/postgis:15-3.3
    container_name: propertyfinder_postgres_local
    environment:
      POSTGRES_DB: propertyfinder
      POSTGRES_USER: propertyfinder
      POSTGRES_PASSWORD: propertyfinder123
    ports:
      - "0.0.0.0:5432:5432"  # Accessible from any network interface
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U propertyfinder"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - propertyfinder_network

  # FastAPI backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: propertyfinder_api_local
    environment:
      DATABASE_URL: postgresql://propertyfinder:propertyfinder123@postgres:5432/propertyfinder
      ZILLOW_API_KEY: ${ZILLOW_API_KEY:-mock_key}
      CENSUS_API_KEY: ${CENSUS_API_KEY:-mock_key}
    ports:
      - "0.0.0.0:8000:8000"  # Accessible from any network interface
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./data:/app/data
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - propertyfinder_network

  # Next.js frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: propertyfinder_frontend_local
    ports:
      - "0.0.0.0:4000:4000"  # Accessible from any network interface
    environment:
      NEXT_PUBLIC_API_URL: http://192.168.86.46:8000
      PORT: 4000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    command: npm run dev
    networks:
      - propertyfinder_network

networks:
  propertyfinder_network:
    driver: bridge

volumes:
  postgres_data_local:
